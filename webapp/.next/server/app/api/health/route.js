"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3642:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>u,routeModule:()=>i,serverHooks:()=>c,staticGenerationAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{GET:()=>p});var a=r(9303),o=r(8716),n=r(670);async function p(){try{let e={status:"healthy",timestamp:new Date().toISOString(),service:"traphouse-webapp",version:process.env.npm_package_version||"1.0.0",environment:"production",uptime:process.uptime(),memory:process.memoryUsage()};return Response.json(e,{status:200})}catch(e){return Response.json({status:"unhealthy",error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()},{status:500})}}let i=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/Users/fullsail/Desktop/traphouse_discordbot/webapp/app/api/health/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:u,staticGenerationAsyncStorage:h,serverHooks:c}=i,l="/api/health/route";function m(){return(0,n.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:h})}},9303:(e,t,r)=>{e.exports=r(517)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948],()=>r(3642));module.exports=s})();